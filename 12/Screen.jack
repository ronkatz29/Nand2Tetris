// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Screen.jack

/**
 * A library of functions for displaying graphics on the screen.
 * The Hack physical screen consists of 256 rows (indexed 0..255, top to bottom)
 * of 512 pixels each (indexed 0..511, left to right). The top left pixel on 
 * the screen is indexed (0,0).
 */
class Screen {
    static Array screen;
    static bool color;

    /** Initializes the Screen. */
    function void init() {
        let screen = 16384;
    }

    /** Erases the entire screen. */
    function void clearScreen() {
    var int i;
    let i = 0;
    while (i < 8192){
        let screen[i] = 0;
        let i = i + 1;
    }
    return;
    }

    /** Sets the current color, to be used for all subsequent drawXXX commands.
     *  Black is represented by true, white by false. */
    function void setColor(boolean b) {
        let color = b;
        return;
    }

    /** Draws the (x,y) pixel, using the current color. */
    function void drawPixel(int x, int y) {
        var int cur_address, bit_to_fill, mod_16;
        let cur_address = (^(^(^(^(^(y)))))) + (#(#(#(#(x))))); // 32*y + x/16
        let mod_16 = x & 15;
        let bit_to_fill = 0;
        while(mod_16 > 0){
            let bit_to_fill = ^(bit_to_fill);
            let mod_16 = mod_16 - 1;
        }
        if (color){
            let screen[cur_address] = screen[cur_address] | bit_to_fill; //set black
            }
        else{
            let screen[cur_address] = screen[cur_address] & (~bit_to_fill); //set white
             }
      return;
    }


    /** Draws a line from pixel (x1,y1) to pixel (x2,y2), using the current color. */
    function void drawLine(int x1, int y1, int x2, int y2) {
    }

    /** Draws a filled rectangle whose top left corner is (x1, y1)
     * and bottom right corner is (x2,y2), using the current color. */
    function void drawRectangle(int x1, int y1, int x2, int y2) {
    }

    /** Draws a filled circle of radius r<=181 around (x,y), using the current color. */
    function void drawCircle(int x, int y, int r) {
    }
}
