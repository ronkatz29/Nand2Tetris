function Screen.init 0
push constant 16384
pop static 0
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8192
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 1
push constant 0
return
function Screen.drawPixel 3
push argument 1
shiftleft
shiftleft
shiftleft
shiftleft
shiftleft
push argument 0
shiftright
shiftright
shiftright
shiftright
add
pop local 0
push argument 0
push constant 15
and
pop local 2
push constant 0
pop local 1
label WHILE_EXP0
push local 2
push constant 0
gt
not
if-goto WHILE_END0
push local 1
shiftleft
pop local 1
push local 2
push constant 1
sub
pop local 2
goto WHILE_EXP0
label WHILE_END0
push static 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push static 0
add
push local 0
push static 0
add
pop pointer 1
push that 0
push local 1
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 0
push static 0
add
push local 0
push static 0
add
pop pointer 1
push that 0
push local 1
not
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push constant 0
return
function Screen.drawLineHorizintal 0
label WHILE_EXP0
push argument 0
push argument 2
lt
push constant 1
add
not
if-goto WHILE_END0
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push argument 0
push constant 1
add
pop argument 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawLineVertical 0
label WHILE_EXP0
push argument 1
push argument 2
lt
push constant 1
add
not
if-goto WHILE_END0
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push argument 1
push constant 1
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawLine 5
push argument 0
push argument 2
eq
push argument 1
and
push argument 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 3
call Screen.drawPixel 2
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 0
push argument 2
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push argument 2
add
pop argument 2
push argument 2
push argument 0
sub
pop argument 0
push argument 2
push argument 0
sub
pop argument 2
push argument 1
push argument 3
add
pop argument 3
push argument 3
push argument 1
sub
pop argument 1
push argument 3
push argument 1
sub
pop argument 3
label IF_FALSE1
push argument 1
push argument 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
push argument 1
push argument 2
call Screen.drawLineHorizintal 3
pop temp 0
push constant 0
return
label IF_FALSE2
push argument 0
push argument 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 0
push argument 1
push argument 3
call Screen.drawLineVertical 3
pop temp 0
push constant 0
return
label IF_FALSE3
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 4
push argument 2
push argument 0
sub
pop local 3
push argument 3
push argument 1
sub
call Math.abs 1
pop local 2
push argument 3
push argument 1
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
label WHILE_EXP0
push local 0
push local 3
lt
push constant 1
add
push local 1
push local 2
lt
push constant 1
add
and
not
if-goto WHILE_END0
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 4
push constant 0
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
push constant 1
add
pop local 0
push local 4
push local 2
add
pop local 4
goto IF_END5
label IF_FALSE5
push local 1
push constant 1
add
pop local 1
push local 4
push local 3
sub
pop local 4
label IF_END5
goto WHILE_EXP0
label WHILE_END0
goto IF_END4
label IF_FALSE4
label WHILE_EXP1
push local 0
push local 3
lt
push constant 1
add
push local 1
push local 2
lt
push constant 1
add
and
not
if-goto WHILE_END1
push argument 0
push local 0
add
push argument 1
push local 1
sub
call Screen.drawPixel 2
pop temp 0
push local 4
push constant 0
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
push constant 1
add
pop local 0
push local 4
push local 2
add
pop local 4
goto IF_END6
label IF_FALSE6
push local 1
push constant 1
add
pop local 1
push local 4
push local 3
sub
pop local 4
label IF_END6
goto WHILE_EXP1
label WHILE_END1
label IF_END4
push constant 0
return
function Screen.drawRectangle 0
label WHILE_EXP0
push argument 3
push argument 1
lt
push constant 1
add
not
if-goto WHILE_END0
push argument 0
push argument 3
push argument 2
push argument 3
call Screen.drawLine 4
pop temp 0
push argument 3
push constant 1
add
pop argument 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 6
push argument 2
pop local 0
label WHILE_EXP0
push local 0
push constant 1
neg
gt
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
pop local 1
push argument 0
push local 1
sub
pop local 2
push argument 0
push local 1
add
pop local 3
push argument 1
push local 0
sub
pop local 4
push argument 1
push local 0
add
pop local 5
push local 2
push local 5
push local 3
push local 5
call Screen.drawLine 4
pop temp 0
push local 2
push local 4
push local 3
push local 4
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
